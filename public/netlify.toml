[build]
  publish = "public"
  # This command explicitly creates 'public/firebase-config.js' during the build.
  # It uses Netlify environment variables directly for reliable injection.
  command = """
    echo "const firebaseConfig = {" > ./public/firebase-config.js
    echo "  apiKey: \\\"$FIREBASE_API_KEY\\\"," >> ./public/firebase-config.js
    echo "  authDomain: \\\"$FIREBASE_AUTH_DOMAIN\\\"," >> ./public/firebase-config.js
    echo "  projectId: \\\"$FIREBASE_PROJECT_ID\\\"," >> ./public/firebase-config.js
    echo "  storageBucket: \\\"$FIREBASE_STORAGE_BUCKET\\\"," >> ./public/firebase-config.js
    echo "  messagingSenderId: \\\"$FIREBASE_MESSAGING_SENDER_ID\\\"," >> ./public/firebase-config.js
    echo "  appId: \\\"$FIREBASE_APP_ID\\\"," >> ./public/firebase-config.js
    echo "  measurementId: \\\"$FIREBASE_MEASUREMENT_ID\\\"" >> ./public/firebase-config.js
    echo "};" >> ./public/firebase-config.js
    echo "export { firebaseConfig };" >> ./public/firebase-config.js
  """

# We are using direct shell variable expansion, so [context.production.environment]
# is not strictly needed for the environment variables to be available to the command,
# but defining them in Netlify UI (Step 3) is paramount.git add .
git commit -m "Final attempt: Robust Netlify build command for direct Firebase config injection"
git push -u origin main